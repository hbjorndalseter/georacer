import { useEffect, useRef, useState } from "react";
import { FaUser, FaRoad, FaCheckCircle, FaMapMarkedAlt } from "react-icons/fa";
import { calculatePanDuration } from "../utils/algorithms";

export default function GameHUD({ playerName, totalDistanceMoved, correctAnswers, mapName }) {
  const [animatedDistance, setAnimatedDistance] = useState(totalDistanceMoved);
  const rafRef = useRef(null);

  // Animation generated by ChatGPT
  useEffect(() => {
    if (rafRef.current) cancelAnimationFrame(rafRef.current);

    const start = animatedDistance;
    const end = totalDistanceMoved;
    const diff = end - start;
    const buffer = 250; // Match driving to number increase
    const duration = calculatePanDuration(diff) * 1000 + buffer // Same duration as the panning (distanceToNextNode)
    const frameRate = 60;
    const totalFrames = Math.round((duration / 1000) * frameRate);

    if (diff === 0) return;

    let frame = 0;

    const animate = () => {
      frame++;
      const progress = frame / totalFrames;
      const easedProgress = easeOutCubic(progress);
      const currentValue = start + diff * easedProgress;
      setAnimatedDistance(currentValue);

      if (frame < totalFrames) {
        rafRef.current = requestAnimationFrame(animate);
      } else {
        setAnimatedDistance(end); // ensure it's exact
      }
    };

    rafRef.current = requestAnimationFrame(animate);
    return () => cancelAnimationFrame(rafRef.current);
  }, [totalDistanceMoved]);

  const easeOutCubic = (t) => (--t) * t * t + 1;

  return (
    <div
      className="absolute top-6 left-6 z-[1000] bg-white/10 text-white px-6 py-5 rounded-2xl shadow-2xl backdrop-blur-md 
                 w-[260px] max-w-xs ring-1 ring-white/10 border border-white/10"
    >
      {/* Header with map name */}
      <div className="flex items-center justify-between mb-4">
        <h2 className="text-lg font-bold tracking-wide text-white/90">
          üó∫Ô∏è {mapName}
        </h2>
      </div>
  
      {/* Divider */}
      <div className="border-b border-white/20 mb-4"></div>
  
      {/* Player name */}
      <div className="flex flex-col text-sm font-medium mb-3">
        <span className="text-white/60 uppercase text-xs">Spiller</span>
        <div className="flex items-center gap-2 mt-0.5">
          <FaUser className="text-purple-300" />
          <span className="text-white font-semibold">{playerName}</span>
        </div>
      </div>
  
      {/* Distance moved */}
      <div className="flex flex-col text-sm font-medium mb-3">
        <span className="text-white/60 uppercase text-xs">Distanse kj√∏rt</span>
        <div className="flex items-center gap-2 mt-0.5">
          <FaRoad className="text-sky-400" />
          <span className="text-white font-semibold">
            {Math.round(animatedDistance)} meter
          </span>
        </div>
      </div>
  
      {/* Correct answers */}
      <div className="flex flex-col text-sm font-medium">
        <span className="text-white/60 uppercase text-xs">Antall korrekte svar</span>
        <div className="flex items-center gap-2 mt-0.5">
          <FaCheckCircle className="text-green-400" />
          <span className="text-white font-semibold">{correctAnswers}</span>
        </div>
      </div>
    </div>
  );  
}
